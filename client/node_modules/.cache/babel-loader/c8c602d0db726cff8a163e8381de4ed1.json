{"ast":null,"code":"var _jsxFileName = \"/Users/joshcodrescu/Desktop/coin-flip/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useState } from \"react\";\nimport backReady from './coin-back-ready.svg';\nimport backLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const location = useLocation();\n  const {\n    player1Name,\n    player1Bet,\n    player1Side\n  } = location.state;\n  const [player2Side, changePlayer2Side] = useState(null);\n  const [flipState, setFlipState] = useState('loading');\n  const [result, setResult] = useState(null);\n  const [winningSide, setWinningSide] = useState(Math.floor(Math.random() * 2) === 0 ? 'heads' : 'tails');\n\n  function reset() {\n    setFlipState('loading');\n    setWinningSide(Math.floor(Math.random() * 2) === 0 ? 'heads' : 'tails');\n    setResult(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(Player, {\n      name: player1Name,\n      side: player1Side,\n      result: player1Side === result ? '-winner' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CoinFlip, {\n      animation: result === null ? flipState : 'done',\n      winningSide: winningSide,\n      image: flipState === 'loading' ? backLoading : backReady\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), player2Side === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        height: '150px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(Player, {\n      name: \"me\",\n      side: \"heads\",\n      result: player2Side === result ? '-winner' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 93\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setTimeout(() => {\n          setResult(winningSide);\n        }, 6000);\n        setFlipState('ready');\n      },\n      children: \"flip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        reset();\n      },\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"8bCu4PG2YuC4CBltrESPMhyXIDU=\", false, function () {\n  return [useLocation];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/joshcodrescu/Desktop/coin-flip/src/Game.js"],"names":["CoinFlip","useLocation","useState","backReady","backLoading","Player","Game","location","player1Name","player1Bet","player1Side","state","player2Side","changePlayer2Side","flipState","setFlipState","result","setResult","winningSide","setWinningSide","Math","floor","random","reset","width","height","setTimeout"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,WAAF;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,MAA2CH,QAAQ,CAACI,KAA1D;AACA,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCX,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,SAAD,CAA1C;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAACkB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,MAAkC,CAAlC,GAAsC,OAAtC,GAAgD,OAAjD,CAA9C;;AAEA,WAASC,KAAT,GAAiB;AACbR,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACAI,IAAAA,cAAc,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,MAAkC,CAAlC,GAAsC,OAAtC,GAAgD,OAAjD,CAAd;AACAL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAET,WAAd;AAA2B,MAAA,IAAI,EAAEE,WAAjC;AAA8C,MAAA,MAAM,EAAEA,WAAW,KAAKM,MAAhB,GAAyB,SAAzB,GAAqC;AAA3F;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEA,MAAM,KAAK,IAAX,GAAkBF,SAAlB,GAA8B,MAAnD;AAA2D,MAAA,WAAW,EAAEI,WAAxE;AAAqF,MAAA,KAAK,EAAEJ,SAAS,KAAK,SAAd,GAA0BV,WAA1B,GAAwCD;AAApI;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKS,WAAW,KAAK,IAAhB,gBAAuB;AAAK,MAAA,KAAK,EAAE;AAACY,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,MAAM,EAAE;AAAzB;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAvB,gBAA+E,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAC,OAAvB;AAA+B,MAAA,MAAM,EAAEb,WAAW,KAAKI,MAAhB,GAAyB,SAAzB,GAAqC;AAA5E;AAAA;AAAA;AAAA;AAAA,YAHpF,eAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACU,QAAAA,UAAU,CAAC,MAAM;AAACT,UAAAA,SAAS,CAACC,WAAD,CAAT;AAAuB,SAA/B,EAAiC,IAAjC,CAAV;AAAkDH,QAAAA,YAAY,CAAC,OAAD,CAAZ;AAAsB,OAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACQ,QAAAA,KAAK;AAAG,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAvBQjB,I;UACYL,W;;;KADZK,I;AAyBT,eAAeA,IAAf","sourcesContent":["import CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useState } from \"react\";\nimport backReady from './coin-back-ready.svg';\nimport backLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\n\nfunction Game() {\n    const location = useLocation()\n    const { player1Name, player1Bet, player1Side } = location.state;\n    const [player2Side, changePlayer2Side] = useState(null);\n    const [flipState, setFlipState] = useState('loading');\n    const [result, setResult] = useState(null);\n    const [winningSide, setWinningSide] = useState(Math.floor(Math.random() * 2) === 0 ? 'heads' : 'tails');\n\n    function reset() {\n        setFlipState('loading');\n        setWinningSide(Math.floor(Math.random() * 2) === 0 ? 'heads' : 'tails');\n        setResult(null);\n    }\n\n    return (\n        <div className=\"Game\">\n            <Player name={player1Name} side={player1Side} result={player1Side === result ? '-winner' : ''}/>\n            <CoinFlip animation={result === null ? flipState : 'done'} winningSide={winningSide} image={flipState === 'loading' ? backLoading : backReady}/>\n            {player2Side === null ? <div style={{width: '300px', height: '150px'}}></div> : <Player name=\"me\" side=\"heads\" result={player2Side === result ? '-winner' : ''}/>}\n            <button onClick={() => {setTimeout(() => {setResult(winningSide)}, 6000); setFlipState('ready')}}>flip</button>\n            <button onClick={() => {reset()}}>reset</button>\n        </div>\n    )\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}