{"ast":null,"code":"var _jsxFileName = \"/Users/joshcodrescu/Desktop/coin-flip/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useState } from \"react\";\nimport backReady from './coin-back-ready.svg';\nimport backLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const location = useLocation();\n  const {\n    player1Name,\n    player1Bet,\n    player1Side\n  } = location.state;\n  const [flipState, setFlipState] = useState('loading');\n  const [result, setResult] = useState('loading');\n  let winningSide = Math.floor(Math.random() * 2) === 0 ? 'heads' : 'tails';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(Player, {\n      name: name,\n      side: side,\n      result: player1Side === result ? '-winner' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CoinFlip, {\n      animation: flipState,\n      winningSide: winningSide,\n      image: flipState === 'loading' ? backLoading : backReady\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      name: \"me\",\n      side: \"heads\",\n      result: player2Side === result ? '-winner' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setFlipState('ready');\n        setTimeout(() => {});\n      },\n      children: \"flip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setFlipState('loading');\n        winningSide = Math.floor(Math.random() * 2) === 0 ? 'heads' : 'tails';\n      },\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"jw+S3H6CXh3oc4iFkF1ELpT4PVk=\", false, function () {\n  return [useLocation];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/joshcodrescu/Desktop/coin-flip/src/Game.js"],"names":["CoinFlip","useLocation","useState","backReady","backLoading","Player","Game","location","player1Name","player1Bet","player1Side","state","flipState","setFlipState","result","setResult","winningSide","Math","floor","random","name","side","player2Side","setTimeout"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,WAAF;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,MAA2CH,QAAQ,CAACI,KAA1D;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,SAAD,CAA1C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,SAAD,CAApC;AAEA,MAAIc,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,MAAkC,CAAlC,GAAsC,OAAtC,GAAgD,OAAlE;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEC,IAAd;AAAoB,MAAA,IAAI,EAAEC,IAA1B;AAAgC,MAAA,MAAM,EAAEX,WAAW,KAAKI,MAAhB,GAAyB,SAAzB,GAAqC;AAA7E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEF,SAArB;AAAgC,MAAA,WAAW,EAAEI,WAA7C;AAA0D,MAAA,KAAK,EAAEJ,SAAS,KAAK,SAAd,GAA0BR,WAA1B,GAAwCD;AAAzG;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAC,OAAvB;AAA+B,MAAA,MAAM,EAAEmB,WAAW,KAAKR,MAAhB,GAAyB,SAAzB,GAAqC;AAA5E;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACD,QAAAA,YAAY,CAAC,OAAD,CAAZ;AAAuBU,QAAAA,UAAU,CAAC,MAAM,CAAE,CAAT,CAAV;AAAqB,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACV,QAAAA,YAAY,CAAC,SAAD,CAAZ;AAAyBG,QAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,MAAkC,CAAlC,GAAsC,OAAtC,GAAgD,OAA9D;AAAsE,OAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAjBQb,I;UACYL,W;;;KADZK,I;AAmBT,eAAeA,IAAf","sourcesContent":["import CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useState } from \"react\";\nimport backReady from './coin-back-ready.svg';\nimport backLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\n\nfunction Game() {\n    const location = useLocation()\n    const { player1Name, player1Bet, player1Side } = location.state;\n    const [flipState, setFlipState] = useState('loading');\n    const [result, setResult] = useState('loading');\n    \n    let winningSide = Math.floor(Math.random() * 2) === 0 ? 'heads' : 'tails';\n\n    return (\n        <div className=\"Game\">\n            <Player name={name} side={side} result={player1Side === result ? '-winner' : ''}/>\n            <CoinFlip animation={flipState} winningSide={winningSide} image={flipState === 'loading' ? backLoading : backReady}/>\n            <Player name=\"me\" side=\"heads\" result={player2Side === result ? '-winner' : ''}/>\n            <button onClick={() => {setFlipState('ready'); setTimeout(() => {})}}>flip</button>\n            <button onClick={() => {setFlipState('loading'); winningSide = Math.floor(Math.random() * 2) === 0 ? 'heads' : 'tails'}}>reset</button>\n        </div>\n    )\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}