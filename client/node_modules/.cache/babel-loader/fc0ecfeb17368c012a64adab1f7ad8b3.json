{"ast":null,"code":"var _jsxFileName = \"/Users/joshcodrescu/Desktop/coin-flip/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useState } from \"react\";\nimport backReady from './coin-back-ready.svg';\nimport backLoading from './coin-back-loading.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const location = useLocation();\n  const {\n    name,\n    bet,\n    side\n  } = location.state;\n  const [flipState, startFlip] = useState('loading');\n  let winningSide = Math.floor(Math.random() * 2) === 0 ? 'heads' : 'tails';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CoinFlip, {\n      animation: flipState,\n      winningSide: winningSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        startFlip('ready');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"J+eW5eI23VHGicAYZha6z5wtpEY=\", false, function () {\n  return [useLocation];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/joshcodrescu/Desktop/coin-flip/src/Game.js"],"names":["CoinFlip","useLocation","useState","backReady","backLoading","Game","location","name","bet","side","state","flipState","startFlip","winningSide","Math","floor","random"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAsBH,QAAQ,CAACI,KAArC;AACA,QAAM,CAACC,SAAD,EAAYC,SAAZ,IAAyBV,QAAQ,CAAC,SAAD,CAAvC;AAEA,MAAIW,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,MAAkC,CAAlC,GAAsC,OAAtC,GAAgD,OAAlE;AAEA,sBACI;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEL,SAArB;AAAgC,MAAA,WAAW,EAAEE;AAA7C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAACD,QAAAA,SAAS,CAAC,OAAD,CAAT;AAAmB;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAbQP,I;UACYJ,W;;;KADZI,I;AAeT,eAAeA,IAAf","sourcesContent":["import CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useState } from \"react\";\nimport backReady from './coin-back-ready.svg';\nimport backLoading from './coin-back-loading.svg';\n\nfunction Game() {\n    const location = useLocation()\n    const { name, bet, side } = location.state;\n    const [flipState, startFlip] = useState('loading');\n    \n    let winningSide = Math.floor(Math.random() * 2) === 0 ? 'heads' : 'tails';\n\n    return (\n        <div>\n            <CoinFlip animation={flipState} winningSide={winningSide}/>\n            <button onClick={() => {startFlip('ready')}} />\n        </div>\n    )\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}