{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nfunction OutsideClick(ref) {\n  _s();\n\n  const [isClicked, setIsClicked] = useState();\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        console.log(\"here1\");\n        setIsClicked(true);\n      } else {\n        console.log(\"here2\");\n        setIsClicked(false);\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n  return isClicked;\n}\n\n_s(OutsideClick, \"pGTUuHdPu/KBrBwOkya5ogO95e4=\");\n\n_c = OutsideClick;\n;\nexport default OutsideClick;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutsideClick\");","map":{"version":3,"sources":["/Users/joshcodrescu/Desktop/coin-flip/src/OutsideClick.js"],"names":["useEffect","useState","OutsideClick","ref","isClicked","setIsClicked","handleClickOutside","event","current","contains","target","console","log","document","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,EAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,aAASM,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,UAAIJ,GAAG,CAACK,OAAJ,IAAe,CAACL,GAAG,CAACK,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAP,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAHD,MAGO;AACLM,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AAEDQ,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,kBAAvC;AACA,WAAO,MAAM;AACXO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,kBAA1C;AACD,KAFD;AAGD,GAfQ,EAeN,CAACH,GAAD,CAfM,CAAT;AAgBA,SAAOC,SAAP;AACD;;GAnBQF,Y;;KAAAA,Y;AAmBR;AAED,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction OutsideClick(ref) {\n  const [isClicked, setIsClicked] = useState();\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        console.log(\"here1\")\n        setIsClicked(true);\n      } else {\n        console.log(\"here2\")\n        setIsClicked(false);\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n  return isClicked;\n};\n\nexport default OutsideClick;\n"]},"metadata":{},"sourceType":"module"}