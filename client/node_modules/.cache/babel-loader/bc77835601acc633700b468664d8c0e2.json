{"ast":null,"code":"var _jsxFileName = \"/Users/joshcodrescu/Desktop/coin-flip/client/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useState } from \"react\";\nimport backReady from './coin-back-ready.svg';\nimport backLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\nimport Confetti from 'react-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const location = useLocation();\n  const {\n    player1Name,\n    player1Bet,\n    player1Side\n  } = location.state;\n  const [player2Side, changePlayer2Side] = useState(player1Side === 'Heads' ? 'Tails' : 'Heads');\n  const [flipState, setFlipState] = useState('loading');\n  const [result, setResult] = useState(null);\n  const [winningSide, setWinningSide] = useState('Heads');\n  console.log(winningSide);\n\n  function reset() {\n    setFlipState('loading');\n    fetch(process.env.REACT_APP_API_URL + '/gameWinner').then(res => res.json).then(result => {\n      console.log(result);\n      setWinningSide(result['winner']);\n    }); // setWinningSide(Math.floor(Math.random() * 2) === 0 ? 'Heads' : 'Tails');\n\n    setResult(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GamePrize\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GamePrizeText\",\n        children: \"Cash Prize:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GamePrizeAmount\",\n        children: player1Bet * 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"GameMain\",\n      children: [/*#__PURE__*/_jsxDEV(Player, {\n        name: player1Name,\n        side: player1Side,\n        result: player1Side === result ? '-winner' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CoinFlip, {\n        animation: result === null ? flipState : 'done',\n        winningSide: winningSide,\n        image: flipState === 'loading' ? backLoading : backReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), player2Side === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '300px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(Player, {\n        name: \"me\",\n        side: player1Side === 'Heads' ? 'Tails' : 'Heads',\n        result: player2Side === result ? '-winner' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 97\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"GameButton\",\n      onClick: () => {\n        setTimeout(() => {\n          setResult(winningSide);\n        }, 5850);\n        setFlipState('ready');\n      },\n      children: \"flip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"GameButton\",\n      onClick: () => {\n        reset();\n      },\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), result !== null ? /*#__PURE__*/_jsxDEV(Confetti, {\n      confettiSource: {\n        x: winningSide === player1Side ? 0 : window.innerWidth - 300,\n        y: 0,\n        w: 300,\n        h: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 32\n    }, this) : null, result !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GameOverOptions\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"GameOverOption\",\n        href: \"/flip\",\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"GameOverOption\",\n        href: \"/\",\n        children: \"Return to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"Uv2sWCahTpMJGD9YDV2CiQ9dCBY=\", false, function () {\n  return [useLocation];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/joshcodrescu/Desktop/coin-flip/client/src/Game.js"],"names":["CoinFlip","useLocation","useState","backReady","backLoading","Player","Confetti","Game","location","player1Name","player1Bet","player1Side","state","player2Side","changePlayer2Side","flipState","setFlipState","result","setResult","winningSide","setWinningSide","console","log","reset","fetch","process","env","REACT_APP_API_URL","then","res","json","width","height","setTimeout","x","window","innerWidth","y","w","h"],"mappings":"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","sourcesContent":["import CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useState } from \"react\";\nimport backReady from './coin-back-ready.svg';\nimport backLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\nimport Confetti from 'react-confetti';\n\nfunction Game() {\n    const location = useLocation()\n    const { player1Name, player1Bet, player1Side } = location.state;\n    const [player2Side, changePlayer2Side] = useState(player1Side === 'Heads' ? 'Tails' : 'Heads');\n    const [flipState, setFlipState] = useState('loading');\n    const [result, setResult] = useState(null);\n    const [winningSide, setWinningSide] = useState('Heads');\n\n    console.log(winningSide);\n\n    function reset() {\n        setFlipState('loading');\n        fetch(process.env.REACT_APP_API_URL + '/gameWinner')\n            .then(res => res.json)\n            .then((result) => {\n                console.log(result)\n                setWinningSide(result['winner']);\n            });\n        // setWinningSide(Math.floor(Math.random() * 2) === 0 ? 'Heads' : 'Tails');\n        setResult(null);\n    }\n\n    return (\n        <div id=\"Game\">\n            <div className=\"GamePrize\">\n                <div className=\"GamePrizeText\">Cash Prize:</div>\n                <div className=\"GamePrizeAmount\">{player1Bet * 2}</div>\n            </div>\n            <div id=\"GameMain\">\n                <Player name={player1Name} side={player1Side} result={player1Side === result ? '-winner' : ''}/>\n                <CoinFlip animation={result === null ? flipState : 'done'} winningSide={winningSide} image={flipState === 'loading' ? backLoading : backReady}/>\n                {player2Side === null ? <div style={{width: '300px', height: '150px'}}></div> : <Player name=\"me\" side={player1Side === 'Heads' ? 'Tails' : 'Heads'} result={player2Side === result ? '-winner' : ''}/>}\n            </div>\n            <button className='GameButton' onClick={() => {setTimeout(() => {setResult(winningSide)}, 5850); setFlipState('ready')}}>flip</button>\n            <button className='GameButton' onClick={() => {reset()}}>reset</button>\n            {result !== null ? <Confetti confettiSource={{ x: (winningSide === player1Side ? 0 : window.innerWidth - 300), y: 0, w: 300, h: 0 }}/> : null}\n            {result !== null ?  <div className=\"GameOverOptions\">\n                                    <a className=\"GameOverOption\" href=\"/flip\">Play Again</a>\n                                    <a className=\"GameOverOption\" href=\"/\">Return to Home</a>\n                                </div> \n                            : null\n            }\n        </div>\n    );\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}