[{"/Users/joshcodrescu/Desktop/coin-flip/client/src/index.js":"1","/Users/joshcodrescu/Desktop/coin-flip/client/src/reportWebVitals.js":"2","/Users/joshcodrescu/Desktop/coin-flip/client/src/Router.js":"3","/Users/joshcodrescu/Desktop/coin-flip/client/src/App.js":"4","/Users/joshcodrescu/Desktop/coin-flip/client/src/Flip.js":"5","/Users/joshcodrescu/Desktop/coin-flip/client/src/Hamburger.js":"6","/Users/joshcodrescu/Desktop/coin-flip/client/src/Game.js":"7","/Users/joshcodrescu/Desktop/coin-flip/client/src/OverlayMenu.js":"8","/Users/joshcodrescu/Desktop/coin-flip/client/src/Player.js":"9","/Users/joshcodrescu/Desktop/coin-flip/client/src/PlayOptions.js":"10","/Users/joshcodrescu/Desktop/coin-flip/client/src/Header.js":"11","/Users/joshcodrescu/Desktop/coin-flip/client/src/CoinFlip.js":"12","/Users/joshcodrescu/Desktop/coin-flip/client/src/CoinLogo.js":"13","/Users/joshcodrescu/Desktop/coin-flip/client/src/QuitButton.js":"14","/Users/joshcodrescu/Desktop/coin-flip/client/src/WaitingPlayers.js":"15"},{"size":543,"mtime":1651266008699,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1648588211033,"results":"18","hashOfConfig":"17"},{"size":642,"mtime":1651196187687,"results":"19","hashOfConfig":"17"},{"size":739,"mtime":1651527282568,"results":"20","hashOfConfig":"17"},{"size":5018,"mtime":1651533720545,"results":"21","hashOfConfig":"17"},{"size":303,"mtime":1649209111801,"results":"22","hashOfConfig":"17"},{"size":4350,"mtime":1651533819582,"results":"23","hashOfConfig":"17"},{"size":1257,"mtime":1649212960706,"results":"24","hashOfConfig":"17"},{"size":758,"mtime":1649714223042,"results":"25","hashOfConfig":"17"},{"size":600,"mtime":1651466786346,"results":"26","hashOfConfig":"17"},{"size":632,"mtime":1651527858775,"results":"27","hashOfConfig":"17"},{"size":409,"mtime":1650323127592,"results":"28","hashOfConfig":"17"},{"size":254,"mtime":1649204435502,"results":"29","hashOfConfig":"17"},{"size":313,"mtime":1649206060793,"results":"30","hashOfConfig":"17"},{"size":1638,"mtime":1650928293253,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13eu45g",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joshcodrescu/Desktop/coin-flip/client/src/index.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/reportWebVitals.js",[],[],["83","84"],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Router.js",[],[],["85","86"],"/Users/joshcodrescu/Desktop/coin-flip/client/src/App.js",[],[],["87","88"],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Flip.js",["89","90"],[],"import { useEffect, useState } from \"react\";\nimport OverlayMenu from \"./OverlayMenu\";\nimport './Flip.css';\nimport Header from \"./Header\";\nimport { Navigate } from \"react-router-dom\";\n\nfunction Flip(props) {\n    const [isMenuActive, activeMenu] = useState(false);\n    const [name, changeName] = useState(null);\n    const [bet, changeBet] = useState(null);\n    const [side, changeSide] = useState('Choose For Me');\n    const [wallet, changeWallet] = useState(\"0x123abc\");\n    const [game, setGame] = useState(null);\n    const [loading, setLoading] = useState(false);\n    let ready = false;\n\n    if (name !== null && bet !== null) {\n        ready = true;\n    }\n\n    async function joinGame() {\n        let requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({name: name, side: side, bet: bet, wallet: wallet})\n        };\n        fetch('/joinGame', requestOptions)\n            .then(result => result.json())\n            .then(result => {\n                let game = {\n                    'p1': {'name': name, 'side': result.givenSide, 'wallet': wallet},\n                    'p2': {'name': result.name, 'side': result.side, 'wallet': result.wallet},\n                    'bet': bet,\n                    'winner': result.winner,\n                    'gameID': result.gameID\n                }\n                setGame(game);\n            })\n            .catch(err => {\n                console.log(err);\n                console.log(\"didnt work\")\n            });\n    }\n\n    useEffect(() => {\n        if (loading) {\n            joinGame();\n        }\n    }, [loading]);\n\n    return (\n        !game ?\n        <div>\n            <Header onMenuClick={() => activeMenu(!isMenuActive)}/>\n            <OverlayMenu \n                isMenuActive={isMenuActive}\n                closeMenu={() => activeMenu(false)} \n            />\n            <div className=\"flip\">\n                <div className='flipRow' id=\"screenName\">\n                    <div className='flipRowText' id=\"screenNameText\">Screen Name:</div>\n                    <input className='flipRowInput' id=\"screenNameInput\"\n                        type=\"text\"\n                        placeholder=\"Input Screen Name\"\n                        value={name !== null ? name : ''}\n                        onChange={(event) => {changeName(event.target.value)}}\n                    />\n                </div>\n                <div className='flipRow' id=\"bet\">\n                    <div className='flipRowText' id=\"betText\">Bet Amount:</div>\n                    <div className='flipRowInput' id=\"betInput\">\n                        <div>\n                            <button onClick={() => changeBet(\"1\")} className={\"betButton\" + (bet === \"1\" ? \"-selected\" : \"\")}>1</button>\n                            <button onClick={() => changeBet(\"5\")} className={\"betButton\" + (bet === \"5\" ? \"-selected\" : \"\")}>5</button>\n                            <button onClick={() => changeBet(\"10\")} className={\"betButton\" + (bet === \"10\" ? \"-selected\" : \"\")}>10</button>\n                        </div>\n                        <div>\n                            <button onClick={() => changeBet(\"25\")} className={\"betButton\" + (bet === \"25\" ? \"-selected\" : \"\")}>25</button>\n                            <button onClick={() => changeBet(\"50\")} className={\"betButton\" + (bet === \"50\" ? \"-selected\" : \"\")}>50</button>\n                        </div>\n                    </div>\n                </div>\n                <div className='flipRow' id=\"side\">\n                    <div className='flipRowText' id=\"sideText\">Side:</div>\n                    <div className='flipRowInput' id=\"sideInput\">\n                        <button onClick={() => changeSide(\"Heads\")} className={\"sideButton\" + (side === \"Heads\" ? \"-selected\" : \"\")}>Heads</button>\n                        <button onClick={() => changeSide(\"Tails\")} className={\"sideButton\" + (side === \"Tails\" ? \"-selected\" : \"\")}>Tails</button>\n                        <button onClick={() => changeSide(\"Choose For Me\")} className={\"sideButton\" + (side === \"Choose For Me\" ? \"-selected\" : \"\")}>Random</button>\n                    </div>\n                </div>\n                <div className='flipRow' id=\"wallet\">\n                    <div className='flipRowText' id=\"walletText\">Wallet:</div>\n                    <div className='flipRowInput' id=\"walletInput\">{wallet !== null ? wallet : \"Connect Wallet\"}</div>\n                </div>\n                {ready ?  \n                    <button onClick={() => {setLoading(true)}} className=\"flipRow\" id={\"readyButton\" + (ready ? '-ready' : '')}>Ready</button>\n                    :\n                    <button id={\"readyButton\" + (ready ? '-ready' : '')}>Ready</button> \n                }\n                {loading ?\n                    <div>loading</div>\n                    :\n                    null\n                }\n            </div>\n        </div>\n        : <Navigate state={game} id=\"readyLink\" to=\"/game\" />\n    )\n}\n\nexport default Flip;","/Users/joshcodrescu/Desktop/coin-flip/client/src/Hamburger.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Game.js",["91"],[],"import CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport coinReady from './coin-back-ready.svg';\nimport coinLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\nimport Confetti from 'react-confetti';\nimport { Navigate } from \"react-router-dom\";\n\nfunction Game() {\n    const location = useLocation();\n    const [gameData, changeGameData] = useState(location.state ? location.state : null);\n    const [gameFinished, setGameFinished] = useState(false);\n    const [startFlip, setStartFlip] = useState(false)\n\n    async function loadGame() {\n        let requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({gameID: gameData.gameID})\n        };\n        console.log(gameData.gameID)\n        fetch('/checkGameState', requestOptions)\n            .then(result => result.json())\n            .then(result => {\n                if (result.name) {\n                    changeGameData({\n                        'p1': {'name': gameData.p1.name, 'side': gameData.p1.side, 'wallet': gameData.p1.wallet},\n                        'p2': {'name': result.name, 'side': result.side, 'wallet': result.wallet},\n                        'winner': result.winner,\n                        'bet': gameData.bet,\n                        'gameID': gameData.gameID\n                    })\n                }\n                else if (result.error) {\n                    console.log(result.error);\n                    changeGameData(null); // this will cause the client to be navigated to home and the game be abandoned\n                }\n                else { // if player 2 not found (result.name = null) then poll again\n                    setTimeout(loadGame, 3000); \n                }\n            })\n            .catch(err => { // this will cause the client to be navigated to home and the game be abandoned\n                console.log(err);\n                changeGameData(null);\n            })\n    }\n\n    useEffect(() => {\n        if (gameData === null) {\n            return; // this is to not allow people onto this page if they haven't gone through the 'flip' page\n        }\n        else if (!gameData.winner) { \n            setTimeout(loadGame, 3000); // this client is p1, so schedule the polling for p2 to join\n        }\n        else if (gameData.winner) {\n            setTimeout(() => {setStartFlip(true)}, 3000);\n            setTimeout(() => {setGameFinished(true)}, 8000);\n        }\n    }, [gameData]);\n\n    return (\n        (gameData ?\n        <div id=\"Game\">\n            <div className=\"GamePrize\">\n                <div className=\"GamePrizeText\">Cash Prize:</div>\n                <div className=\"GamePrizeAmount\">{gameData.bet * 2}</div>\n            </div>\n            <div id=\"GameMain\">\n                <Player name={gameData.p1.name} side={gameData.p1.side} result={gameFinished ? (gameData.winner === gameData.p1.side ? '-winner' : '') : ''}/>\n                <CoinFlip className=\"CoinFlipAnimation\" animation={gameFinished ? 'done' : (!startFlip ? 'loading' : 'ready')} winningSide={!startFlip ? null : gameData.winner} image={!startFlip ? coinLoading : coinReady}/>\n                {gameData.winner === null ? <div style={{width: '300px', height: '150px'}}></div> : <Player name={gameData.p2.name} side={gameData.p2.side} wallet={gameData.p2.wallet} result={gameFinished ? (gameData.winner === gameData.p2.side ? '-winner' : '') : ''}/>}\n            </div>\n            {gameFinished ? <Confetti className=\"LaptopScreenConfetti\" confettiSource={{ x: (gameData.winner === gameData.p1.side ? 0 : window.innerWidth - 300), y: 0, w: 300, h: 0 }}/> : null}\n            {gameFinished && gameData.p1.side === gameData.winner ? <Confetti className=\"PhoneScreenConfetti\" confettiSource={{ x: 0, y: 0, w: 300, h: 0 }}/> : null}\n            {gameFinished ?  <div className=\"GameOverOptions\">\n                                    <a className=\"GameOverOption\" href=\"/flip\">Play Again</a>\n                                    <a className=\"GameOverOption\" href=\"/\">Return to Home</a>\n                                </div> \n                        : <div className=\"GameOverOptions\"></div>\n            }\n        </div>\n        : <Navigate to=\"/\" />)\n    );\n}\n\nexport default Game;","/Users/joshcodrescu/Desktop/coin-flip/client/src/OverlayMenu.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Player.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/PlayOptions.js",[],[],["92","93"],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Header.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/CoinFlip.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/CoinLogo.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/QuitButton.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/WaitingPlayers.js",[],[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"94","replacedBy":"100"},{"ruleId":"96","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":12,"column":20,"nodeType":"104","messageId":"105","endLine":12,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":49,"column":8,"nodeType":"108","endLine":49,"endColumn":17,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":61,"column":8,"nodeType":"108","endLine":61,"endColumn":18,"suggestions":"111"},{"ruleId":"94","replacedBy":"112"},{"ruleId":"96","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],["114"],["115"],"no-unused-vars","'changeWallet' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'joinGame'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has a missing dependency: 'loadGame'. Either include it or remove the dependency array.",["117"],["114"],["115"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [joinGame, loading]",{"range":"122","text":"123"},"Update the dependencies array to be: [gameData, loadGame]",{"range":"124","text":"125"},[1631,1640],"[joinGame, loading]",[2568,2578],"[gameData, loadGame]"]