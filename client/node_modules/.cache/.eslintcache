[{"/Users/joshcodrescu/Desktop/coin-flip/client/src/index.js":"1","/Users/joshcodrescu/Desktop/coin-flip/client/src/reportWebVitals.js":"2","/Users/joshcodrescu/Desktop/coin-flip/client/src/Router.js":"3","/Users/joshcodrescu/Desktop/coin-flip/client/src/App.js":"4","/Users/joshcodrescu/Desktop/coin-flip/client/src/Flip.js":"5","/Users/joshcodrescu/Desktop/coin-flip/client/src/Hamburger.js":"6","/Users/joshcodrescu/Desktop/coin-flip/client/src/Game.js":"7","/Users/joshcodrescu/Desktop/coin-flip/client/src/OverlayMenu.js":"8","/Users/joshcodrescu/Desktop/coin-flip/client/src/Player.js":"9","/Users/joshcodrescu/Desktop/coin-flip/client/src/PlayOptions.js":"10","/Users/joshcodrescu/Desktop/coin-flip/client/src/Header.js":"11","/Users/joshcodrescu/Desktop/coin-flip/client/src/CoinFlip.js":"12","/Users/joshcodrescu/Desktop/coin-flip/client/src/CoinLogo.js":"13","/Users/joshcodrescu/Desktop/coin-flip/client/src/QuitButton.js":"14","/Users/joshcodrescu/Desktop/coin-flip/client/src/WaitingPlayers.js":"15"},{"size":463,"mtime":1650321351968,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1648588211033,"results":"18","hashOfConfig":"17"},{"size":688,"mtime":1649707804731,"results":"19","hashOfConfig":"17"},{"size":713,"mtime":1650656484003,"results":"20","hashOfConfig":"17"},{"size":3468,"mtime":1650497358555,"results":"21","hashOfConfig":"17"},{"size":303,"mtime":1649209111801,"results":"22","hashOfConfig":"17"},{"size":8664,"mtime":1650927850188,"results":"23","hashOfConfig":"17"},{"size":1257,"mtime":1649212960706,"results":"24","hashOfConfig":"17"},{"size":758,"mtime":1649714223042,"results":"25","hashOfConfig":"17"},{"size":593,"mtime":1650243608862,"results":"26","hashOfConfig":"17"},{"size":626,"mtime":1649210271644,"results":"27","hashOfConfig":"17"},{"size":409,"mtime":1650323127592,"results":"28","hashOfConfig":"17"},{"size":254,"mtime":1649204435502,"results":"29","hashOfConfig":"17"},{"size":313,"mtime":1649206060793,"results":"30","hashOfConfig":"17"},{"size":1638,"mtime":1650928293253,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"13eu45g",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joshcodrescu/Desktop/coin-flip/client/src/index.js",[],[],["81","82"],"/Users/joshcodrescu/Desktop/coin-flip/client/src/reportWebVitals.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Router.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/App.js",[],[],["83","84"],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Flip.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Hamburger.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Game.js",["85"],[],"import CoinFlip from \"./CoinFlip\";\nimport { useLocation } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport coinReady from './coin-back-ready.svg';\nimport coinLoading from './coin-back-loading.svg';\nimport Player from './Player';\nimport './Game.css';\nimport Confetti from 'react-confetti';\n\n/*\n\np1: load in. fetch(/addPlayer, gameData)\n                .then(  () => fetch(/otherPlayerData, gameData)\n                                .then(  res => res.json()   )\n                                .then(  (result) => {\n                                    if (result.name === null) {\n                                        setTimeout();\n                                    }\n                                    else {\n                                        fetch(/decideWinner, gameData);\n                                    }\n                                        }) )\n\n*/\n\nfunction Game() {\n    const location = useLocation();\n    const [gameData, changeGameData] = useState({\n                                                'p1': {'name': location.state.player1Name, 'side': location.state.player1Side, 'wallet': location.state.player1Wallet}, \n                                                'p2': {'name': null, 'side': null, 'wallet': null}, \n                                                'bet': location.state.player1Bet,\n                                                'winningSide': null,\n                                                'gameID': null\n                                                });\n    const [gameFinished, setGameFinished] = useState(false);\n\n    // useEffect(() => {\n    //     const interval = setInterval(async () => {\n    //         console.log(gameData);\n    //         const requestOptions = {\n    //             method: 'POST',\n    //             headers: { 'Content-Type': 'application/json' },\n    //             body: JSON.stringify({'gameID': gameData.gameID})\n    //         };\n    //         fetch('/updateTime', requestOptions).then(result => console.log(\"time updated\"));\n    //     }, 5000);\n      \n    //     return () => clearInterval(interval);\n    // }, [gameData]);\n\n    async function loadGame() {\n        let requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"gameID\": gameData.gameID})\n        };\n        let tempGameData = null;\n        fetch('/otherPlayerData', requestOptions)\n                .then(otherPlayerData => otherPlayerData.json())\n                .then((otherPlayerData) => {\n                    if (otherPlayerData.name === null) { // if no other player has joined recall this function in 3 seconds\n                        setTimeout(loadGame, 3000);\n                    }\n                    else { // other player was found so begin game\n                        setTimeout(() => {setGameFinished(true)}, 6000);\n                        let requestOptions = {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({'gameID': gameData.gameID})\n                        };\n                        fetch('/getWinner', requestOptions) // get winner returns the winner of the game\n                            .then(winningSide => winningSide.json())\n                            .then((winningSide) => {\n                                tempGameData = {\n                                    'p1': {'name': gameData.p1.name, 'side': gameData.p1.side, 'wallet': gameData.p1.wallet}, \n                                    'p2': {'name': otherPlayerData.name, 'side': otherPlayerData.side, 'wallet': otherPlayerData.wallet}, \n                                    'bet': gameData.bet,\n                                    'winningSide': winningSide.side,\n                                    'gameID': gameData.gameID\n                                };\n                            })\n                            .then(() => {\n                                fetch('/endGame', requestOptions); // end game removes the game from the servers database\n                            })\n                            .then(() => {\n                                changeGameData(tempGameData);\n                            })\n                            .catch(err => {\n                                console.log(err);\n                                window.location.href = \"/\";\n                            })\n                        \n                    }\n                })\n                .catch(err => {\n                    console.log(err);\n                    window.location.href = \"/\";\n                })\n    }\n\n    useEffect(() => {\n        if (gameData.gameID === null) {\n            let requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({name: gameData.p1.name, side: gameData.p1.side, bet: gameData.bet, wallet: gameData.p1.wallet})\n            };\n            fetch('/addPlayer', requestOptions)\n                .then(res => res.json())\n                .then((otherPlayerData) => {\n                    changeGameData({\n                        'p1': {'name': gameData.p1.name, 'side': gameData.p1.side, 'wallet': gameData.p1.wallet}, \n                        'p2': {'name': otherPlayerData.name, 'side': otherPlayerData.side, 'wallet': otherPlayerData.wallet}, \n                        'bet': gameData.bet,\n                        'winningSide': null,\n                        'gameID': otherPlayerData.gameID\n                    });\n                })\n                .catch(err => {\n                    console.log(err);\n                    window.location.href = \"/\";\n                    return;\n                });\n        }\n        else if (gameData.p2.name === null) { // this client is p1\n            setTimeout(loadGame, 3000);\n        }\n        else if (gameData.winningSide === null){ // this client is p2\n            setTimeout(() => {setGameFinished(true)}, 6000);\n            let requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({'gameID': gameData.gameID})\n            };\n            fetch('/decideWinner', requestOptions) // decide winner initiates the money transfer and returns the winning side\n                .then(winningSide => winningSide.json())\n                .then((winningSide) => {\n                    changeGameData({\n                        'p1': {'name': gameData.p1.name, 'side': gameData.p1.side, 'wallet': gameData.p1.wallet}, \n                        'p2': {'name': gameData.p2.name, 'side': gameData.p2.side, 'wallet': gameData.p2.wallet}, \n                        'bet': gameData.bet,\n                        'winningSide': winningSide.side,\n                        'gameID': gameData.gameID\n                    })\n                })\n                .catch(err => {\n                    console.log(err);\n                    window.location.href = \"/\";\n                    return;\n                });\n        }\n    }, [gameData]);\n    \n    return (\n        <div id=\"Game\">\n            <div className=\"GamePrize\">\n                <div className=\"GamePrizeText\">Cash Prize:</div>\n                <div className=\"GamePrizeAmount\">{gameData.bet * 2}</div>\n            </div>\n            <div id=\"GameMain\">\n                <Player name={gameData.p1.name} side={gameData.p1.side} result={gameFinished ? (gameData.winningSide === gameData.p1.side ? '-winner' : '') : ''}/>\n                <CoinFlip animation={gameFinished ? 'done' : (gameData.winningSide === null ? 'loading' : 'ready')} winningSide={gameData.winningSide} image={gameData.winningSide === null ? coinLoading : coinReady}/>\n                {gameData.winningSide === null ? <div style={{width: '300px', height: '150px'}}></div> : <Player name={gameData.p2.name} side={gameData.p2.side} wallet={gameData.p2.wallet} result={gameFinished ? (gameData.winningSide === gameData.p2.side ? '-winner' : '') : ''}/>}\n            </div>\n            {gameFinished ? <Confetti confettiSource={{ x: (gameData.winningSide === gameData.p1.side ? 0 : window.innerWidth - 300), y: 0, w: 300, h: 0 }}/> : null}\n            {gameFinished ?  <div className=\"GameOverOptions\">\n                                    <a className=\"GameOverOption\" href=\"/flip\">Play Again</a>\n                                    <a className=\"GameOverOption\" href=\"/\">Return to Home</a>\n                                </div> \n                        : null\n            }\n        </div>\n    );\n}\n\nexport default Game;",["86","87"],"/Users/joshcodrescu/Desktop/coin-flip/client/src/OverlayMenu.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Player.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/PlayOptions.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/Header.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/CoinFlip.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/CoinLogo.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/QuitButton.js",[],[],"/Users/joshcodrescu/Desktop/coin-flip/client/src/WaitingPlayers.js",[],[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"88","replacedBy":"92"},{"ruleId":"90","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":152,"column":8,"nodeType":"96","endLine":152,"endColumn":18,"suggestions":"97"},{"ruleId":"88","replacedBy":"98"},{"ruleId":"90","replacedBy":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadGame'. Either include it or remove the dependency array.","ArrayExpression",["102"],["100"],["101"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [gameData, loadGame]",{"range":"105","text":"106"},[7150,7160],"[gameData, loadGame]"]